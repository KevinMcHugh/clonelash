{"version":3,"sources":["utils/history.js","utils/router.js","Admin.js","Players.js","Prompt.js","Vote.js","PlayerMessages.js","Game.js","Home.js","utils/routes.js","index.js"],"names":["useQueries","createHistory","matchURI","path","uri","keys","match","toRegex","exec","params","Object","create","i","length","name","undefined","_callee","routes","context","_iterator","_step","route","result","error","regenerator_default","a","wrap","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","pathname","abrupt","action","objectSpread","sent","t0","e","f","finish","Error","status","stop","router","resolve","Admin","_startGame","preventDefault","axios","put","_this","props","game_id","game","state","then","response","setState","data","catch","console","log","_addAPlayer","post","_answerQuestions","_cancelGame","_completeVotes","this","player","admin","react_default","createElement","onClick","Component","Players","classCallCheck","_super","call","handleReceivedPlayer","message_type","players","playerIndex","_","findIndex","id","oldPlayer","score","scoreUpdated","push","_this2","get","channel","playerId","winnerIds","winners","map","winner","className","lib","onReceived","includes","key","style","width","concat","transitionProperty","transitionDuration","transitionTimingFunction","Prompt","handleReceivedPlayerMessage","prompts","some","p","_onSubmit","messageId","text","target","elements","remove","isEmpty","_renderMessage","prompt","first","game_prompt","_renderForm","_this3","onSubmit","autoComplete","maxlength","Vote","_getCurrentGamePrompt","gamePrompt","_onClick","responseId","response_id","player_id","game_prompt_id","_renderVote","_renderResponses","vote","responses","disabled","selectable","PlayerMessages","winnerNames","src_Prompt_0","src_Vote_0","es","onChange","Game","handleReceivedGame","setCookies","_onSubmitName","playing","_onClickJustWatching","messages","defaults","baseURL","cookies","Cookies","gameChannel","protocol","window","location","port","url","hostname","src_Admin","unsetCookies","_renderPlayer","src_Players_0","Fragment","_renderJustWatching","placeholder","src_PlayerMessages","Home","onClickGame","gameId","_onClickNewGame","_setCookies","started_by_id","games","document","title","src_Game","_unsetCookies","set","src_Home","container","getElementById","renderComponent","component","ReactDOM","render","history","getCurrentLocation","listen"],"mappings":"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","file":"static/js/main.2c3aad9f.chunk.js","sourcesContent":["import createHistory from 'history/lib/createBrowserHistory';\nimport useQueries from 'history/lib/useQueries';\nexport default useQueries(createHistory)();\n","import toRegex from 'path-to-regexp';\nfunction matchURI(path, uri) {\n  const keys = [];\n  const pattern = toRegex(path, keys); // TODO: Use caching\n  const match = pattern.exec(uri);\n  if (!match) return null;\n  const params = Object.create(null);\n  for (let i = 1; i < match.length; i++) {\n    params[keys[i - 1].name] =\n      match[i] !== undefined ? match[i] : undefined;\n  }\n  return params;\n}\nasync function resolve(routes, context) {\n  for (const route of routes) {\n    const uri = context.error ? '/error' : context.pathname;\n    const params = matchURI(route.path, uri);\n    if (!params) continue;\n    const result = await route.action({ ...context, params });\n    if (result) return result;\n  }\n  const error = new Error('Not found');\n  error.status = 404;\n  throw error;\n}\nexport default { resolve };","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Admin extends Component {\n\n  _startGame = (e) => {\n    e.preventDefault()\n    axios.put('games/' + this.props.game_id,\n      {game: { state: 'started'}})\n      .then(response => {\n        this.setState({\n          game: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _addAPlayer = (e) => {\n    e.preventDefault()\n    axios.post('admin/add_player',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _answerQuestions = (e) => {\n    e.preventDefault()\n    axios.post('admin/answer_questions',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _cancelGame = (e) => {\n    e.preventDefault()\n    axios.put('games/' + this.props.game_id,\n      {game: { state: 'canceled'}})\n      .then(response => {\n        this.setState({\n          game: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _completeVotes = (e) => {\n    e.preventDefault()\n    axios.post('admin/complete_votes',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  render() {\n    // All this shit seems to break sockets...\n    if (this.props.player && this.props.player.admin) {\n      return (\n        <div>\n          <button onClick={this._startGame}>Start the game now!</button>\n          <button onClick={this._addAPlayer}>Add a player.</button>\n          <button onClick={this._answerQuestions}>Answer all questions.</button>\n          <button onClick={this._completeVotes}>Complete all votes.</button>\n          <button onClick={this._cancelGame}>Cancel the game now!</button>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default Admin\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport './Players.css';\nimport _ from 'lodash';\n\nclass Players extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      players: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('games/' + this.props.game_id + '/players')\n      .then(response => {\n        this.setState({\n          players: response.data\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayer = (response) => {\n    if (response.message_type === 'Player') {\n      let players = this.state.players;\n      const playerIndex = _.findIndex(players, {id: response.id})\n      if (playerIndex >=0) {\n        let oldPlayer = players[playerIndex]\n        if (oldPlayer.score !== response.score) {\n          response.scoreUpdated = oldPlayer.scoreUpdated ? oldPlayer.scoreUpdated + 1 : 1\n        }\n        players[playerIndex] = response\n      } else {\n        players.push(response)\n      }\n\n      this.setState({\n        players\n      });\n    }\n  };\n\n  render() {\n    const channel = { channel: 'GameChannel', id: this.props.game_id }\n    const playerId = (this.props.player || {}).id\n    const winnerIds = this.props.winners ? this.props.winners.map(winner => { return winner.id }) : []\n\n    if (this.state.players.length > 0) {\n      return (\n        <div className='Player-container'>\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayer} />\n          {this.state.players.map (player => {\n            let className = \"Player\"\n            if (player.id === playerId) {\n              className += \" Player-current\"\n            }\n            if (winnerIds.includes(player.id)) {\n              className += \" Player-winner\"\n            }\n            if (player.scoreUpdated) {\n              className += \" Player-score-updated-\" + player.scoreUpdated % 2\n            }\n            return (\n              <div key={player.id} className={className}>\n                {player.name}\n                <div>\n                  Score: {player.score}\n                  <div className=\"Player-score\" style={{\n                    width: `${player.score * 10}px`,\n                    transitionProperty: \"width\",\n                    transitionDuration: `1.5s`,\n                    transitionTimingFunction: \"ease-out\"}\n                  }/>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        hang on...\n      </div>\n    )\n  }\n}\n\nexport default Players","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\nimport './Prompt.css';\n\nclass Prompt extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      prompts: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('players/' + this.props.playerId + '/prompts')\n      .then(response => {\n        this.setState({\n          prompts: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'Response') {\n      let prompts = this.state.prompts;\n      if (!prompts.some(p => p.id === response.id)) {\n        prompts.push(response)\n      }\n      this.setState({\n        prompts\n      });\n    }\n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.prompts === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.prompts)) {\n      return (<div>Wait for other players...</div>)\n    }\n    if (!_.isEmpty(this.state.prompts)) {\n      return (\n        <div className=\"Prompt\">\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderMessage() }\n        </div>\n      )\n    }\n  }\n\n  _onSubmit = (e,messageId) => {\n    e.preventDefault()\n    const text = e.target.elements[0].value\n    e.target.elements[0].value = ''\n    axios.put('responses/' + messageId,\n      {text: text})\n      .then(response => {\n        let prompts = this.state.prompts\n        _.remove(prompts, {id: response.data.id})\n        this.setState({\n          prompts\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _renderMessage() {\n    const prompt = _.first(this.state.prompts)\n    if (prompt) {\n      return (\n        <div>\n          <div> Answer this question: </div>\n          {prompt.game_prompt.text}\n          {this._renderForm(prompt)}\n        </div>\n      )\n    }\n  }\n\n  _renderForm(prompt) {\n    if (prompt.id) {\n      return (\n        <form onSubmit={(e) => this._onSubmit(e,prompt.id)}>\n          <input name=\"text\" autoComplete=\"off\" maxlength={30}/>\n          <button>OK</button>\n        </form>\n      )\n    }\n  }\n}\n\nexport default Prompt","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\nimport './Vote.css';\n\nclass Vote extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      gamePrompt: null\n    }\n  }\n\n  _getCurrentGamePrompt = () => {\n    axios.get('players/' + this.props.playerId + '/current_game_prompt')\n      .then(response => {\n        this.setState({\n          gamePrompt: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  componentDidMount() {\n    this._getCurrentGamePrompt()\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'GamePrompt') {\n      this.setState({gamePrompt: response})\n    }\n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.gamePrompt === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.gamePrompt)) {\n      return (<div>Wait for other players...</div>)\n    } else {\n      return (\n        <div className=\"Vote\">\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderVote() }\n        </div>\n      )\n    }\n  }\n\n  _onClick = (e,responseId) => {\n    axios.post('votes',\n      {response_id: responseId, player_id: this.props.playerId, game_prompt_id: this.state.gamePrompt.id})\n      .then(response => {\n        this._getCurrentGamePrompt()\n    }).catch(error => console.log(error))\n  }\n\n  _renderVote() {\n    const gamePrompt = this.state.gamePrompt\n    if (gamePrompt) {\n      return (\n        <div>\n          <div>vote now:</div>\n          {gamePrompt.text}\n          <div>{ this._renderResponses(gamePrompt) }</div>\n        </div>\n      )\n    }\n  }\n\n  _renderResponses(vote) {\n    return vote.responses.map((response) => {\n      return (\n        <button className=\"Vote-option\" key={response.id} onClick={(e) => this._onClick(e,response.id)} disabled={!response.selectable} >\n          {response.text}\n        </button>\n      )\n    })\n  }\n}\n\nexport default Vote","import React, { Component } from 'react';\nimport Prompt from './Prompt';\nimport Vote from './Vote';\nimport CanvasDraw from \"react-canvas-draw\";\n\nclass PlayerMessages extends Component {\n  render() {\n    const playerId = this.props.playerId\n    const winnerNames = this.props.game.winners.map(winner => { return winner.name})\n    if (this.props.game.state === 'started' || this.props.game.state === 'final_question_opened') {\n      return (<Prompt playerId={playerId}/>)\n    } else if (this.props.game.state === 'voting_opened' || this.props.game.state === 'final_voting_opened') {\n      return (<Vote playerId={playerId} game={this.props.game}/>)\n    } else if (this.props.game.state === 'finished') {\n      return (winnerNames.length > 1 ? \"Congrats to the winners, \" : \"Congrats to the winner, \") + winnerNames\n    } else if (this.props.game.state === 'art') {\n      return (<CanvasDraw onChange={() => console.log(\"onChange\")} />);\n    } else {\n      return \"Game will start soon...Maybe a join code goes here.\"\n    }\n  }\n}\n\nexport default PlayerMessages","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Admin from './Admin';\nimport Players from './Players';\nimport PlayerMessages from './PlayerMessages';\nimport Cookies from 'universal-cookie';\nimport { ActionCableProvider, ActionCableConsumer } from 'react-actioncable-provider';\n\nclass Game extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      game: null,\n      player: null,\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    axios.defaults.baseURL = \"/api\"\n\n    axios.get('games/' + this.props.id)\n      .then(response => {\n        this.setState({\n          game: response.data\n        })\n    }).catch(error => console.log(error))\n\n    const cookies = new Cookies();\n    if (cookies.get('player_id')) {\n      axios.get('players/' + cookies.get('player_id'))\n        .then(response => {\n          this.setState({\n            player: response.data\n          })\n      }).catch(error => console.log(error))\n    }\n  }\n\n  handleReceivedGame = (response) => {\n    if (response.message_type === 'Game') {\n      this.setState({\n        game: response\n      })\n    }\n  }\n\n  _onSubmit = (e) => {\n    e.preventDefault()\n    const name = e.target.elements[0].value\n    axios.post('players',\n      {game_id: this.props.id, name: name})\n      .then(response => {\n        this.props.setCookies(response.data.id, this.props.id)\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _onSubmitName = (e) => {\n    e.preventDefault()\n    const name = e.target.elements[0].value\n    axios.put('players/' + this.state.player.id,\n      {name: name, playing: true})\n      .then(response => {\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _onClickJustWatching = (e) => {\n    axios.put('players/' + this.state.player.id,\n      {playing: false})\n      .then(response => {\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  render() {\n    const gameChannel = { channel: 'GameChannel', id: this.props.id }\n    const protocol = (window.location.protocol === \"http:\" ? \"ws://\" : \"wss://\")\n    const port = (!!window.location.port ? \":3001\" : \"\")\n    if (this.state.game) {\n      return (\n        <ActionCableProvider url={`${protocol}${window.location.hostname}${port}/cable`}>\n          <div className=\"App\">\n            <ActionCableConsumer channel={gameChannel}\n                                 onReceived={this.handleReceivedGame} />\n            <header className=\"App-header\">\n              <Admin game_id={this.props.id} player={this.state.player}/>\n              <button onClick={this.props.unsetCookies} className=\"small\">Leave the game now</button>\n            </header>\n            <div className=\"App-body\">\n              <div className=\"App-player\">{this._renderPlayer()}</div>\n              <Players game_id={this.props.id} player={this.state.player} winners={this.state.game.winners} />\n            </div>\n          </div>\n        </ActionCableProvider>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          hang on...\n        </header>\n      </div>\n    )\n  }\n\n  _renderPlayer() {\n    const player = this.state.player\n    // TODO: support !player and game.state not created, canceled or finished\n    if (!player) {\n      return (\n        <React.Fragment>\n          <form onSubmit={this._onSubmit} autoComplete=\"off\" maxlength={20}>\n            <input name=\"name\" placeholder=\"player name\"/>\n            <button>OK</button>\n          </form>\n        </React.Fragment>\n      )\n    } else if (player.admin && player.playing == null) {\n      return (\n        <React.Fragment>\n          {this._renderJustWatching()}\n          OR:\n          <form onSubmit={this._onSubmitName} autoComplete=\"off\" maxlength={20}>\n            <input name=\"name\" placeholder=\"player name\"/>\n            <button>OK</button>\n          </form>\n        </React.Fragment>\n      )\n    } else {\n      return (<PlayerMessages playerId={this.state.player.id} game={this.state.game} />)\n    }\n  }\n\n  _renderJustWatching() {\n    return <button onClick={this._onClickJustWatching}>Just Watching!</button>\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Game from './Game';\nimport Cookies from 'universal-cookie';\n\nclass Home extends Component {\n\n  constructor(props){\n    super(props)\n    const cookies = new Cookies();\n\n    this.state = {\n      games: [],\n      gameId: cookies.get('game_id')\n    }\n  }\n\n  componentWillMount() {\n    document.title = \"Generic websocket-based game\"\n    axios.defaults.baseURL = \"/api\"\n  }\n\n  render() {\n    if (this.state.gameId) {\n      return <Game id={this.state.gameId} setCookies={this._setCookies} unsetCookies={() => this._unsetCookies()}/>\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <div className=\"game-links\">\n          <button onClick={this.onClickGame}> Join the existing game </button>\n        </div>\n        <div className=\"new-game\">\n          <button onClick={this._onClickNewGame}>Start your own game</button>\n        </div>\n      </div>\n    );\n  }\n\n  onClickGame = () => {\n    axios.get('games/current.json')\n      .then(response => {\n        this.setState({ gameId: response.data.id })\n    }).catch(error => console.log(error))\n  };\n\n  _onClickNewGame = (e) => {\n    e.preventDefault()\n    axios.post('games.json').then(response => {\n      this._setCookies(response.data.started_by_id, response.data.id)\n      this.setState({gameId: response.data.id })\n    })\n  }\n\n  _setCookies(playerId, gameId) {\n    const cookies = new Cookies();\n    cookies.set('player_id', playerId, { path: '/' });\n    cookies.set('game_id', gameId, { path: '/' });\n  }\n\n  _unsetCookies() {\n    const cookies = new Cookies();\n    cookies.remove('player_id')\n    cookies.remove('game_id')\n\n    this.setState({gameId: null})\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from '../Home';\nimport Game from '../Game';\n// import FourOhFour from '../FourOhFour';\n\nconst routes = [\n  { path: '/', action: () => <Home /> },\n  { path: '/games/:id', id: 'foo', action: (params) => <Game {...params}/> }\n];\n\nexport default routes","import ReactDOM from 'react-dom';\nimport './index.css';\n\nimport history from './utils/history';\nimport router from './utils/router';\nimport routes from './utils/routes';\nimport axios from 'axios';\nconst container = document.getElementById('root');\n\nfunction renderComponent(component) {\n  ReactDOM.render(component, container);\n}\nfunction render(location) {\n  router.resolve(routes, location)\n    .then(renderComponent)\n    .catch(error => router.resolve(routes, { ...location, error })\n    .then(renderComponent));\n}\naxios.defaults.baseURL = \"/api\"\nrender(history.getCurrentLocation()); // render the current URL\nhistory.listen(render);               // render subsequent URLs\n\n"],"sourceRoot":""}