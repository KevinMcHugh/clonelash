{"version":3,"sources":["utils/history.js","utils/router.js","Home.js","Admin.js","Players.js","Prompt.js","Vote.js","PlayerMessages.js","Game.js","constants.js","utils/routes.js","index.js"],"names":["useQueries","createHistory","matchURI","path","uri","keys","match","toRegex","exec","params","Object","create","i","length","name","undefined","_callee","routes","context","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","route","result","error","regenerator_default","a","wrap","_context","prev","next","Symbol","iterator","done","value","pathname","abrupt","action","objectSpread","sent","t0","return","finish","Error","status","stop","this","router","resolve","Home","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","games","_this2","axios","get","then","response","setState","data","catch","console","log","react_default","createElement","className","map","game","key","id","href","Component","Admin","_addAPlayer","e","preventDefault","post","game_id","_answerQuestions","_completeVotes","onClick","Players","handleReceivedPlayer","message_type","players","some","p","push","channel","playerId","player","lib","onReceived","Prompt","handleReceivedPlayerMessage","prompts","_onSubmit","messageId","text","target","elements","put","_","remove","isEmpty","_renderMessage","_this3","message","first","game_prompt","onSubmit","Vote","responsesToVoteOn","_onClick","voteId","responseId","response_id","player_id","foo","_renderVote","vote","_renderResponses","responses","PlayerMessages","src_Prompt","src_Vote","Game","handleReceivedGame","Cookies","set","_startGame","messages","cookies","gameChannel","url","_renderStartOrWait","_renderPlayer","src_Players_0","src_Admin","startable","src_PlayerMessages","placeholder","src_Home","src_Game","container","document","getElementById","renderComponent","component","ReactDOM","render","location","history","getCurrentLocation","listen"],"mappings":"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","file":"static/js/main.d2d3ed97.chunk.js","sourcesContent":["import createHistory from 'history/lib/createBrowserHistory';\nimport useQueries from 'history/lib/useQueries';\nexport default useQueries(createHistory)();\n","import toRegex from 'path-to-regexp';\nfunction matchURI(path, uri) {\n  const keys = [];\n  const pattern = toRegex(path, keys); // TODO: Use caching\n  const match = pattern.exec(uri);\n  if (!match) return null;\n  const params = Object.create(null);\n  for (let i = 1; i < match.length; i++) {\n    params[keys[i - 1].name] =\n      match[i] !== undefined ? match[i] : undefined;\n  }\n  return params;\n}\nasync function resolve(routes, context) {\n  for (const route of routes) {\n    const uri = context.error ? '/error' : context.pathname;\n    const params = matchURI(route.path, uri);\n    if (!params) continue;\n    const result = await route.action({ ...context, params });\n    if (result) return result;\n  }\n  const error = new Error('Not found');\n  error.status = 404;\n  throw error;\n}\nexport default { resolve };","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass Home extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      games: []\n    }\n  }\n\n  componentWillMount() {\n    axios.get('http://localhost:3001/games.json')\n      .then(response => {\n        this.setState({\n          games: response.data\n        })\n    }).catch(error => console.log(error))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Stink Buttsmell\n\n          {this.state.games.map (game => {\n            return (<a key={game.id} href={\"/games/\" + game.id }> {game.id} </a>)\n          })}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Admin extends Component {\n\n  constructor(props){\n    super(props)\n  }\n\n  _addAPlayer = (e) => {\n    e.preventDefault()\n    axios.post('http://localhost:3001/admin/add_player',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _answerQuestions = (e) => {\n    e.preventDefault()\n    axios.post('http://localhost:3001/admin/answer_questions',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _completeVotes = (e) => {\n    e.preventDefault()\n    axios.post('http://localhost:3001/admin/complete_votes',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  render() {\n\n    return (\n      <div>\n        <button onClick={this._addAPlayer}>Add a player.</button>\n        <button onClick={this._answerQuestions}>Answer all questions.</button>\n        <button onClick={this._completeVotes}>Complete all votes.</button>\n      </div>\n    )\n  }\n}\n\nexport default Admin","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableProvider, ActionCableConsumer } from 'react-actioncable-provider';\nimport { API_WS_ROOT } from './constants';\nimport './Players.css';\n\nclass Players extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      players: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/games/' + this.props.game_id + '/players')\n      .then(response => {\n        this.setState({\n          players: response.data\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayer = (response) => {\n    if (response.message_type == 'Player') {\n      let players = this.state.players;\n      if (!players.some(p => p.id === response.id)) {\n        players.push(response)\n      }\n      console.log(response)\n      this.setState({\n        players\n      });\n    }\n  };\n\n  render() {\n    const channel = { channel: 'GameChannel', id: this.props.game_id }\n    const playerId = (this.props.player || {}).id\n    if (this.state.players) {\n      return (\n        <div className='Player-container'>\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayer} />\n          {this.state.players.map (player => {\n            return (\n              <div key={player.id} className={player.id === playerId ? 'Player Player-current' : 'Player' }>\n                {player.name}\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        hang on...\n      </div>\n    )\n  }\n}\n\nexport default Players","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\n\nclass Prompt extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      prompts: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/players/' + this.props.playerId + '/prompts')\n      .then(response => {\n        this.setState({\n          prompts: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'Response') {\n      let prompts = this.state.prompts;\n      if (!prompts.some(p => p.id === response.id)) {\n        prompts.push(response)\n      }\n      this.setState({\n        prompts\n      });\n    } \n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.prompts === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.prompts)) {\n      return (<div>Wait for other players...</div>)\n    }\n    if (!_.isEmpty(this.state.prompts)) {\n      return (\n        <div>\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderMessage() }\n        </div>\n      )\n    }\n  }\n\n  _onSubmit = (e,messageId) => {\n    e.preventDefault()\n    const text = e.target.elements[0].value\n    axios.put('http://localhost:3001/responses/' + messageId,\n      {text: text})\n      .then(response => {\n        let prompts = this.state.prompts\n        _.remove(prompts, {id: response.data.id})\n        this.setState({\n          prompts\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _renderMessage() {\n    const message = _.first(this.state.prompts)\n    if (message) {\n      return (\n        <div>\n          Answer this question: {message.game_prompt.text}\n          <form onSubmit={(e) => this._onSubmit(e,message.id)}>\n            <input name=\"text\" />\n            <button>OK</button>\n          </form>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Prompt","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\n\nclass Vote extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      responsesToVoteOn: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/votes',\n      { params: { player_id: this.props.playerId, foo: 'bar' }})\n      .then(response => {\n        this.setState({\n          responsesToVoteOn: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'Vote') {\n      let responsesToVoteOn = this.state.responsesToVoteOn;\n      if (!responsesToVoteOn.some(p => p.id === response.id)) {\n        responsesToVoteOn.push(response)\n      }\n      this.setState({\n        responsesToVoteOn\n      })\n    }\n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.prompts === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.responsesToVoteOn)) {\n      return (<div>Wait for other players...</div>)\n    } else {\n      return (\n        <div>\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderVote() }\n        </div>\n      )\n    }\n  }\n\n  _onClick = (e,voteId,responseId) => {\n    // e.preventDefault()\n    axios.put('http://localhost:3001/votes/' + voteId,\n      {response_id: responseId})\n      .then(response => {\n        // actually probably want to leave this up while votes roll in...\n        let responsesToVoteOn = this.state.responsesToVoteOn\n        _.remove(responsesToVoteOn, {id: response.data.id})\n        this.setState({\n          responsesToVoteOn\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _renderVote() {\n    const vote = _.first(this.state.responsesToVoteOn)\n    if (vote) {\n      return (\n        <div>\n          vote now: {vote.game_prompt.text}\n          <div>{ this._renderResponses(vote) }</div>\n        </div>\n      )\n    }\n  }\n\n  _renderResponses(vote) {\n    return vote.responses.map((response) => {\n      return (\n        <button key={response.id} onClick={(e) => this._onClick(e,vote.id,response.id)}>\n          {response.text}\n        </button>\n      )\n    })\n  }\n}\n\nexport default Vote","import React, { Component } from 'react';\nimport Prompt from './Prompt';\nimport Vote from './Vote';\n\nclass PlayerMessages extends Component {\n  render() {\n    const playerId = this.props.playerId\n    if (this.props.game.state === 'started') {\n      return (<Prompt playerId={playerId}/>)\n    } else if (this.props.game.state === 'voting_opened') {\n      return (<Vote playerId={playerId}/>)\n    } else {\n      return \"Game will start soon...Maybe a join code goes here.\"\n    }\n  }\n}\n\nexport default PlayerMessages","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Admin from './Admin';\nimport Players from './Players';\nimport PlayerMessages from './PlayerMessages';\nimport Cookies from 'universal-cookie';\nimport { ActionCableProvider, ActionCableConsumer } from 'react-actioncable-provider';\nimport { API_WS_ROOT } from './constants';\n\nclass Game extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      game: null,\n      player: null,\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/games/' + this.props.params.id)\n      .then(response => {\n        this.setState({\n          game: response.data\n        })\n    }).catch(error => console.log(error))\n    const cookies = new Cookies();\n    if (cookies.get('player_id')) {\n      axios.get('http://localhost:3001/players/' + cookies.get('player_id'))\n        .then(response => {\n          this.setState({\n            player: response.data\n          })\n      }).catch(error => console.log(error))\n    }\n  }\n\n  handleReceivedGame = (response) => {\n    if (response.message_type === 'Game') {\n      this.setState({\n        game: response\n      })\n    }\n  }\n\n  _onSubmit = (e) => {\n    e.preventDefault()\n    const name = e.target.elements[0].value\n    axios.post('http://localhost:3001/players',\n      {game_id: this.props.params.id, name: name})\n      .then(response => {\n        const cookies = new Cookies();\n        cookies.set('player_id', response.data.id, { path: '/' });\n\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  render() {\n    const gameChannel = { channel: 'GameChannel', id: this.props.params.id }\n\n    if (this.state.game) {\n      return (\n        <ActionCableProvider url={API_WS_ROOT}>\n          <div className=\"App\">\n            <ActionCableConsumer channel={gameChannel}\n                                 onReceived={this.handleReceivedGame} />\n            <header className=\"App-header\">\n              game state: {this.state.game.state}\n            </header>\n            <div className=\"App-body\">\n              {this._renderStartOrWait()}\n              <div className=\"App-player\">{this._renderPlayer()}</div>\n              <Players game_id={this.props.params.id} player={this.state.player} />\n            </div>\n            <footer className=\"App-footer\">\n              <Admin game_id={this.props.params.id}/>\n            </footer>\n          </div>\n        </ActionCableProvider>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          hang on...\n        </header>\n      </div>\n    )\n  }\n\n  _renderStartOrWait() {\n    if (this.state.game.state === \"created\") {\n      if (this.state.game.startable) {\n        return (<button onClick={(e) => this._startGame(e)}>Start the game now!</button>)\n      } else {\n        return (<div> Waiting for more players! </div>)\n      }\n    }\n  }\n\n  _startGame = (e) => {\n    e.preventDefault()\n    axios.put('http://localhost:3001/games/' + this.props.params.id,\n      {game: { state: 'started'}})\n      .then(response => {\n        this.setState({\n          game: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _renderPlayer() {\n    if (!this.state.player) {\n      if (this.state.game.state != 'created') {\n        return <div> Sorry, you are too late to join the game, but have fun voting!</div>\n      } else {\n        return (\n          <form onSubmit={this._onSubmit}>\n            <input name=\"name\" placeholder=\"player name\"/>\n            <button>OK</button>\n          </form>\n        )\n      }\n    } else {\n      return (<PlayerMessages playerId={this.state.player.id} game={this.state.game} />)\n    }\n  }\n}\n\nexport default Game;\n","export const API_ROOT = 'http://localhost:3001';\nexport const API_WS_ROOT = 'ws://localhost:3001/cable';\nexport const HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};","import React from 'react';\nimport Home from '../Home';\nimport Game from '../Game';\n// import FourOhFour from '../FourOhFour';\n\nconst routes = [\n  { path: '/', action: () => <Home /> },\n  { path: '/games/:id', id: 'foo', action: (params) => <Game {...params}/> }\n];\n\nexport default routes","import ReactDOM from 'react-dom';\nimport './index.css';\n\nimport history from './utils/history';\nimport router from './utils/router';\nimport routes from './utils/routes';\nconst container = document.getElementById('root');\n\nfunction renderComponent(component) {\n  ReactDOM.render(component, container);\n}\nfunction render(location) {\n  router.resolve(routes, location)\n    .then(renderComponent)\n    .catch(error => router.resolve(routes, { ...location, error })\n    .then(renderComponent));\n}\nrender(history.getCurrentLocation()); // render the current URL\nhistory.listen(render);               // render subsequent URLs\n\n"],"sourceRoot":""}