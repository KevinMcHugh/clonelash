{"version":3,"sources":["utils/history.js","utils/router.js","Admin.js","Players.js","Prompt.js","Vote.js","PlayerMessages.js","Game.js","Home.js","utils/routes.js","index.js"],"names":["useQueries","createHistory","matchURI","path","uri","keys","match","toRegex","exec","params","Object","create","i","length","name","undefined","_callee","routes","context","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","route","result","error","regenerator_default","a","wrap","_context","prev","next","Symbol","iterator","done","value","pathname","abrupt","action","objectSpread","sent","t0","return","finish","Error","status","stop","router","resolve","Admin","_startGame","e","preventDefault","axios","put","_this","props","game_id","game","state","then","response","setState","data","catch","console","log","_addAPlayer","post","_answerQuestions","_cancelGame","_completeVotes","this","player","admin","react_default","createElement","onClick","Component","Players","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleReceivedPlayer","message_type","players","playerIndex","_","findIndex","id","oldPlayer","score","scoreUpdated","push","_this2","get","channel","playerId","winnerIds","winners","map","winner","className","lib","onReceived","includes","key","style","width","concat","transitionProperty","transitionDuration","transitionTimingFunction","Prompt","handleReceivedPlayerMessage","prompts","some","p","_onSubmit","messageId","text","target","elements","remove","isEmpty","_renderMessage","prompt","first","game_prompt","_renderForm","_this3","onSubmit","autoComplete","maxlength","Vote","_getCurrentGamePrompt","gamePrompt","_onClick","responseId","response_id","player_id","game_prompt_id","_renderVote","_renderResponses","vote","responses","disabled","selectable","PlayerMessages","winnerNames","src_Prompt_0","src_Vote_0","Game","handleReceivedGame","setCookies","_onSubmitName","playing","_onClickJustWatching","messages","defaults","baseURL","cookies","Cookies","gameChannel","protocol","window","location","port","url","hostname","src_Admin","unsetCookies","_renderPlayer","src_Players_0","Fragment","_renderJustWatching","placeholder","src_PlayerMessages","Home","onClickGame","gameId","_onClickNewGame","_setCookies","started_by_id","games","document","title","src_Game","_unsetCookies","set","src_Home","container","getElementById","renderComponent","component","ReactDOM","render","history","getCurrentLocation","listen"],"mappings":"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","file":"static/js/main.3661f402.chunk.js","sourcesContent":["import createHistory from 'history/lib/createBrowserHistory';\nimport useQueries from 'history/lib/useQueries';\nexport default useQueries(createHistory)();\n","import toRegex from 'path-to-regexp';\nfunction matchURI(path, uri) {\n  const keys = [];\n  const pattern = toRegex(path, keys); // TODO: Use caching\n  const match = pattern.exec(uri);\n  if (!match) return null;\n  const params = Object.create(null);\n  for (let i = 1; i < match.length; i++) {\n    params[keys[i - 1].name] =\n      match[i] !== undefined ? match[i] : undefined;\n  }\n  return params;\n}\nasync function resolve(routes, context) {\n  for (const route of routes) {\n    const uri = context.error ? '/error' : context.pathname;\n    const params = matchURI(route.path, uri);\n    if (!params) continue;\n    const result = await route.action({ ...context, params });\n    if (result) return result;\n  }\n  const error = new Error('Not found');\n  error.status = 404;\n  throw error;\n}\nexport default { resolve };","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Admin extends Component {\n\n  _startGame = (e) => {\n    e.preventDefault()\n    axios.put('games/' + this.props.game_id,\n      {game: { state: 'started'}})\n      .then(response => {\n        this.setState({\n          game: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _addAPlayer = (e) => {\n    e.preventDefault()\n    axios.post('admin/add_player',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _answerQuestions = (e) => {\n    e.preventDefault()\n    axios.post('admin/answer_questions',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  _cancelGame = (e) => {\n    e.preventDefault()\n    axios.put('games/' + this.props.game_id,\n      {game: { state: 'canceled'}})\n      .then(response => {\n        this.setState({\n          game: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _completeVotes = (e) => {\n    e.preventDefault()\n    axios.post('admin/complete_votes',\n      {game_id: this.props.game_id}\n    ).catch(error => console.log(error))\n  }\n\n  render() {\n    // All this shit seems to break sockets...\n    if (this.props.player && this.props.player.admin) {\n      return (\n        <div>\n          <button onClick={this._startGame}>Start the game now!</button>\n          <button onClick={this._addAPlayer}>Add a player.</button>\n          <button onClick={this._answerQuestions}>Answer all questions.</button>\n          <button onClick={this._completeVotes}>Complete all votes.</button>\n          <button onClick={this._cancelGame}>Cancel the game now!</button>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default Admin\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport './Players.css';\nimport _ from 'lodash';\n\nclass Players extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      players: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('games/' + this.props.game_id + '/players')\n      .then(response => {\n        this.setState({\n          players: response.data\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayer = (response) => {\n    if (response.message_type === 'Player') {\n      let players = this.state.players;\n      const playerIndex = _.findIndex(players, {id: response.id})\n      if (playerIndex >=0) {\n        let oldPlayer = players[playerIndex]\n        if (oldPlayer.score !== response.score) {\n          response.scoreUpdated = oldPlayer.scoreUpdated ? oldPlayer.scoreUpdated + 1 : 1\n        }\n        players[playerIndex] = response\n      } else {\n        players.push(response)\n      }\n\n      this.setState({\n        players\n      });\n    }\n  };\n\n  render() {\n    const channel = { channel: 'GameChannel', id: this.props.game_id }\n    const playerId = (this.props.player || {}).id\n    const winnerIds = this.props.winners ? this.props.winners.map(winner => { return winner.id }) : []\n\n    if (this.state.players.length > 0) {\n      return (\n        <div className='Player-container'>\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayer} />\n          {this.state.players.map (player => {\n            let className = \"Player\"\n            if (player.id === playerId) {\n              className += \" Player-current\"\n            }\n            if (winnerIds.includes(player.id)) {\n              className += \" Player-winner\"\n            }\n            if (player.scoreUpdated) {\n              className += \" Player-score-updated-\" + player.scoreUpdated % 2\n            }\n            return (\n              <div key={player.id} className={className}>\n                {player.name}\n                <div>\n                  Score: {player.score}\n                  <div className=\"Player-score\" style={{\n                    width: `${player.score * 10}px`,\n                    transitionProperty: \"width\",\n                    transitionDuration: `1.5s`,\n                    transitionTimingFunction: \"ease-out\"}\n                  }/>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        hang on...\n      </div>\n    )\n  }\n}\n\nexport default Players","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\nimport './Prompt.css';\n\nclass Prompt extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      prompts: null\n    }\n  }\n\n  componentDidMount() {\n    axios.get('players/' + this.props.playerId + '/prompts')\n      .then(response => {\n        this.setState({\n          prompts: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'Response') {\n      let prompts = this.state.prompts;\n      if (!prompts.some(p => p.id === response.id)) {\n        prompts.push(response)\n      }\n      this.setState({\n        prompts\n      });\n    }\n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.prompts === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.prompts)) {\n      return (<div>Wait for other players...</div>)\n    }\n    if (!_.isEmpty(this.state.prompts)) {\n      return (\n        <div className=\"Prompt\">\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderMessage() }\n        </div>\n      )\n    }\n  }\n\n  _onSubmit = (e,messageId) => {\n    e.preventDefault()\n    const text = e.target.elements[0].value\n    e.target.elements[0].value = ''\n    axios.put('responses/' + messageId,\n      {text: text})\n      .then(response => {\n        let prompts = this.state.prompts\n        _.remove(prompts, {id: response.data.id})\n        this.setState({\n          prompts\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _renderMessage() {\n    const prompt = _.first(this.state.prompts)\n    if (prompt) {\n      return (\n        <div>\n          <div> Answer this question: </div>\n          {prompt.game_prompt.text}\n          {this._renderForm(prompt)}\n        </div>\n      )\n    }\n  }\n\n  _renderForm(prompt) {\n    if (prompt.id) {\n      return (\n        <form onSubmit={(e) => this._onSubmit(e,prompt.id)}>\n          <input name=\"text\" autoComplete=\"off\" maxlength={30}/>\n          <button>OK</button>\n        </form>\n      )\n    }\n  }\n}\n\nexport default Prompt","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport _ from 'lodash';\nimport './Vote.css';\n\nclass Vote extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      gamePrompt: null\n    }\n  }\n\n  _getCurrentGamePrompt = () => {\n    axios.get('players/' + this.props.playerId + '/current_game_prompt')\n      .then(response => {\n        this.setState({\n          gamePrompt: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  componentDidMount() {\n    this._getCurrentGamePrompt()\n  }\n\n  handleReceivedPlayerMessage = (response) => {\n    if (response.message_type === 'GamePrompt') {\n      this.setState({gamePrompt: response})\n    }\n  }\n\n  render() {\n    const playerId = this.props.playerId\n    const channel = { channel: 'PlayerChannel', id: playerId }\n\n    if (this.state.gamePrompt === null) {\n      return (<div>hang on...</div>)\n    } else if (_.isEmpty(this.state.gamePrompt)) {\n      return (<div>Wait for other players...</div>)\n    } else {\n      return (\n        <div className=\"Vote\">\n          <ActionCableConsumer\n            channel={channel}\n            onReceived={this.handleReceivedPlayerMessage} />\n          { this._renderVote() }\n        </div>\n      )\n    }\n  }\n\n  _onClick = (e,responseId) => {\n    axios.post('votes',\n      {response_id: responseId, player_id: this.props.playerId, game_prompt_id: this.state.gamePrompt.id})\n      .then(response => {\n        this._getCurrentGamePrompt()\n    }).catch(error => console.log(error))\n  }\n\n  _renderVote() {\n    const gamePrompt = this.state.gamePrompt\n    if (gamePrompt) {\n      return (\n        <div>\n          <div>vote now:</div>\n          {gamePrompt.text}\n          <div>{ this._renderResponses(gamePrompt) }</div>\n        </div>\n      )\n    }\n  }\n\n  _renderResponses(vote) {\n    return vote.responses.map((response) => {\n      return (\n        <button className=\"Vote-option\" key={response.id} onClick={(e) => this._onClick(e,response.id)} disabled={!response.selectable} >\n          {response.text}\n        </button>\n      )\n    })\n  }\n}\n\nexport default Vote","import React, { Component } from 'react';\nimport Prompt from './Prompt';\nimport Vote from './Vote';\n\nclass PlayerMessages extends Component {\n  render() {\n    const playerId = this.props.playerId\n    const winnerNames = this.props.game.winners.map(winner => { return winner.name})\n    if (this.props.game.state === 'started' || this.props.game.state === 'final_question_opened') {\n      return (<Prompt playerId={playerId}/>)\n    } else if (this.props.game.state === 'voting_opened' || this.props.game.state === 'final_voting_opened') {\n      return (<Vote playerId={playerId} game={this.props.game}/>)\n    } else if (this.props.game.state === 'finished') {\n      return (winnerNames.length > 1 ? \"Congrats to the winners, \" : \"Congrats to the winner, \") + winnerNames\n    } else {\n      return \"Game will start soon...Maybe a join code goes here.\"\n    }\n  }\n}\n\nexport default PlayerMessages","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Admin from './Admin';\nimport Players from './Players';\nimport PlayerMessages from './PlayerMessages';\nimport Cookies from 'universal-cookie';\nimport { ActionCableProvider, ActionCableConsumer } from 'react-actioncable-provider';\n\nclass Game extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      game: null,\n      player: null,\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    axios.defaults.baseURL = \"/api\"\n\n    axios.get('games/' + this.props.id)\n      .then(response => {\n        this.setState({\n          game: response.data\n        })\n    }).catch(error => console.log(error))\n\n    const cookies = new Cookies();\n    if (cookies.get('player_id')) {\n      axios.get('players/' + cookies.get('player_id'))\n        .then(response => {\n          this.setState({\n            player: response.data\n          })\n      }).catch(error => console.log(error))\n    }\n  }\n\n  handleReceivedGame = (response) => {\n    if (response.message_type === 'Game') {\n      this.setState({\n        game: response\n      })\n    }\n  }\n\n  _onSubmit = (e) => {\n    e.preventDefault()\n    const name = e.target.elements[0].value\n    axios.post('players',\n      {game_id: this.props.id, name: name})\n      .then(response => {\n        this.props.setCookies(response.data.id, this.props.id)\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _onSubmitName = (e) => {\n    e.preventDefault()\n    const name = e.target.elements[0].value\n    axios.put('players/' + this.state.player.id,\n      {name: name, playing: true})\n      .then(response => {\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  _onClickJustWatching = (e) => {\n    axios.put('players/' + this.state.player.id,\n      {playing: false})\n      .then(response => {\n        this.setState({\n          player: response.data,\n        })\n    }).catch(error => console.log(error))\n  }\n\n  render() {\n    const gameChannel = { channel: 'GameChannel', id: this.props.id }\n    const protocol = (window.location.protocol === \"http:\" ? \"ws://\" : \"wss://\")\n    const port = (!!window.location.port ? \":3001\" : \"\")\n    if (this.state.game) {\n      return (\n        <ActionCableProvider url={`${protocol}${window.location.hostname}${port}/cable`}>\n          <div className=\"App\">\n            <ActionCableConsumer channel={gameChannel}\n                                 onReceived={this.handleReceivedGame} />\n            <header className=\"App-header\">\n              <Admin game_id={this.props.id} player={this.state.player}/>\n              <button onClick={this.props.unsetCookies} className=\"small\">Leave the game now</button>\n            </header>\n            <div className=\"App-body\">\n              <div className=\"App-player\">{this._renderPlayer()}</div>\n              <Players game_id={this.props.id} player={this.state.player} winners={this.state.game.winners} />\n            </div>\n          </div>\n        </ActionCableProvider>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          hang on...\n        </header>\n      </div>\n    )\n  }\n\n  _renderPlayer() {\n    const player = this.state.player\n    // TODO: support !player and game.state not created, canceled or finished\n    if (!player) {\n      return (\n        <React.Fragment>\n          <form onSubmit={this._onSubmit} autoComplete=\"off\" maxlength={20}>\n            <input name=\"name\" placeholder=\"player name\"/>\n            <button>OK</button>\n          </form>\n        </React.Fragment>\n      )\n    } else if (player.admin && player.playing == null) {\n      return (\n        <React.Fragment>\n          {this._renderJustWatching()}\n          OR:\n          <form onSubmit={this._onSubmitName} autoComplete=\"off\" maxlength={20}>\n            <input name=\"name\" placeholder=\"player name\"/>\n            <button>OK</button>\n          </form>\n        </React.Fragment>\n      )\n    } else {\n      return (<PlayerMessages playerId={this.state.player.id} game={this.state.game} />)\n    }\n  }\n\n  _renderJustWatching() {\n    return <button onClick={this._onClickJustWatching}>Just Watching!</button>\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Game from './Game';\nimport Cookies from 'universal-cookie';\n\nclass Home extends Component {\n\n  constructor(props){\n    super(props)\n    const cookies = new Cookies();\n\n    this.state = {\n      games: [],\n      gameId: cookies.get('game_id')\n    }\n  }\n\n  componentWillMount() {\n    document.title = \"Generic websocket-based game\"\n    axios.defaults.baseURL = \"/api\"\n  }\n\n  render() {\n    if (this.state.gameId) {\n      return <Game id={this.state.gameId} setCookies={this._setCookies} unsetCookies={() => this._unsetCookies()}/>\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\" />\n        <div className=\"game-links\">\n          <button onClick={this.onClickGame}> Join the existing game </button>\n        </div>\n        <div className=\"new-game\">\n          <button onClick={this._onClickNewGame}>Start your own game</button>\n        </div>\n      </div>\n    );\n  }\n\n  onClickGame = () => {\n    axios.get('games/current.json')\n      .then(response => {\n        this.setState({ gameId: response.data.id })\n    }).catch(error => console.log(error))\n  };\n\n  _onClickNewGame = (e) => {\n    e.preventDefault()\n    axios.post('games.json').then(response => {\n      this._setCookies(response.data.started_by_id, response.data.id)\n      this.setState({gameId: response.data.id })\n    })\n  }\n\n  _setCookies(playerId, gameId) {\n    const cookies = new Cookies();\n    cookies.set('player_id', playerId, { path: '/' });\n    cookies.set('game_id', gameId, { path: '/' });\n  }\n\n  _unsetCookies() {\n    const cookies = new Cookies();\n    cookies.remove('player_id')\n    cookies.remove('game_id')\n\n    this.setState({gameId: null})\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from '../Home';\nimport Game from '../Game';\n// import FourOhFour from '../FourOhFour';\n\nconst routes = [\n  { path: '/', action: () => <Home /> },\n  { path: '/games/:id', id: 'foo', action: (params) => <Game {...params}/> }\n];\n\nexport default routes","import ReactDOM from 'react-dom';\nimport './index.css';\n\nimport history from './utils/history';\nimport router from './utils/router';\nimport routes from './utils/routes';\nimport axios from 'axios';\nconst container = document.getElementById('root');\n\nfunction renderComponent(component) {\n  ReactDOM.render(component, container);\n}\nfunction render(location) {\n  router.resolve(routes, location)\n    .then(renderComponent)\n    .catch(error => router.resolve(routes, { ...location, error })\n    .then(renderComponent));\n}\naxios.defaults.baseURL = \"/api\"\nrender(history.getCurrentLocation()); // render the current URL\nhistory.listen(render);               // render subsequent URLs\n\n"],"sourceRoot":""}